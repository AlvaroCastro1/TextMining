Título: Cómo usar GitHub Copilot para convertirte en un desarrollador más feliz y más productivo.
URL: https://www.freecodecamp.org/espanol/news/como-usar-github-copilot-para-convertirse-en-un-desarrollador-mas-feliz-y-mas-productivo/
Número de palabras: 1638

 
Original article: How to Use GitHub Copilot to Become a Happier and More Productive Developer
 Hay una gran cantidad de herramientas de inteligencia artificial (IA) para desarrolladores en el mercado, pero para mi GitHub Copilot se diferencia del resto por su usabilidad, integración limpia al IDE y la palpable diferencia en la productividad al utilizarlo. Copilot ofrece una variedad de herramientas de Inteligencia Artificial que han simplificado radicalmente mi experiencia como desarrollador. Lo usé para generar código, pruebas e incluso aplicaciones simples. También es genial para depurar, refactorizar y documentar código existente. Curiosamente, usar Copilot causo que desarrolle funciones más rápido de lo que las partes interesadas del negocio pueden revisarlas. Es importante remarcar que, las herramientas de Inteligencia Artificial, incluido Copilot pueden estar superequivocadas, disculparse (o no) cuando las corregimos y, luego con total confianza, producir el mismo error. Pero, siempre que estés atento a los puntos débiles de las herramientas de Inteligencia Artificial, y, tengas suficientes conocimientos para reconocer cuando se equivocan, vas a poder mitigarlos en el camino hacia una productividad sustancialmente mejorada. Para configurar y ver el uso básico de Copilot, te recomiendo que consultes la documentación oficial (en español). Puedes agregar Copilot a una cuenta personal o comercial, hay una prueba gratuita y, tiene un precio razonable luego del periodo de prueba. Después de agregar Copilot a tu cuenta de GitHub, querrás instalar los plugins a tu IDE y logguearte para empezar a utilizarlo. En este artículo, vamos a utilizar estas extensiones de Visual Studio Code: Notas: Antes de sumergirnos en algunos casos de uso de Copilot, una aclaración rápida en cuanto a la privacidad: Básicamente, si confías en GitHub para alojar tu código fuente, puedes confiar en lo que harán con los prompts que envíes a Copilot y tus fragmentos de código. [Por favor, revisa las preguntas frecuentes (en inglés) y la declaración de privacidad] Los casos de uso de GitHub Copilot son numerosos, y pueden realmente agilizar el proceso de desarrollo. A continuación, te dejo una lista de lo que puedes hacer con las extensiones de Copilot: Copilot es conocido por su capacidad para finalizar el código. Si escribís un comentario o si escribís el principio de una línea de código, Copilot te sugerirá una solución que puedes aceptar, ignorar o, incluso explorar alternativas. Esta característica es conocida como "texto fantasma". Una vez que instalada la extensión de Copilot e iniciada la sesión, utilizarlo es tan sencillo como tipear instrucciones y pulsar la tecla Tabulador a medida que van surgiendo las sugerencias. Llevando un poco más allá la función de completar, Copilot puede tomar un prompt y usarlo para construir toda una aplicación. Le pedí que creara una API REST en Node con funciones ABM para "productos", y género código funcional. Esto es impresionante;  inclusive le di el mismo prompt a ChatGPT, que también me dio instrucciones de como realizar el proyecto, lo cuan es también impresionante.  Copilot Voice puede tanto escribir como editar código basado en comandos de voz, la mayoría de las veces es más rápido utilizar Copilot con el teclado que dictando una a una las líneas de código usando Voice, pero es totalmente factible utilizar Voice para crear y ejecutar código sin necesidad de utilizar el teclado, algo mucho más que útil para personas que posean alguna dificultad para usar el teclado. A menudo debí sentarme frente a la PC para intentar deducir que es lo que un boque de código está haciendo. Algunas veces es código heredado (Legacy Code) del cual no entiendo el contexto del negocio, o a veces está usando una librería particular que nunca use, a veces también debo reconocer que maldije a la persona que lo escribió, incluso si esa persona fui yo. A continuación te muestro el código generado por Copilot con el prompt que utilice antes "Un API REST en Node...": Tome el código y se lo di como entrada a Copilot para que me explicara el código, esta fue su respuesta: Aquí está la explicación del código: Este es un segmento de código sencillo, y la respuesta brindada por Copilot es clara y directa, sería bastante útil agregar esto como un comentario sobre el código de la función. Otro buen ejemplo de uso son las expresiones regulares, entiendo como funcionan, pero a veces no tengo la paciencia para entender que es lo que la expresión regular esta haciendo. Le di como entrada a Copilot esté gigantesca expresión regular para la validación de un correo electrónico: Explico la expresión regular a un alto nivel, indicando que está dividido en la parte local y el dominio, representado antes y después del símbolo "@" en una dirección de correo electrónico. Luego, describió los caracteres permitidos en cada parte, bastante útil. A menudo se requiere que los desarrolladores aprendamos rápidamente nuevos lenguajes y frameworks, Copilot Chat hace esta tarea bastante sencilla, aquí te muestro un arreglo de productos en JavaScript que fue convertido a Ruby por Copilot: Este es un ejemplo muy sencillo, así que transformemos esto en una clase y vallamos en sentido contrario (de Ruby a JavaScript): Esto funciono de maravilla, inclusive le pedí que lo transformara en TypeScript y funciono perfecto: Esta es una de las funciones más útiles que posee Copilot Chat, puedes darle un fragmento de código problemático o el mensaje de error que tienes y el programa te indicara cuál "piensa" que es el error No recuerdo la cantidad de veces que me arranque los pelos tratando de encontrar un error de sintaxis, la habilidad de Copilot para arreglar errores me hacen más feliz (y me permite conservar mi cabello). También puedes darle como entrada a Copilot Chat un mensaje de error sin ningún otro prompt y te devolverá el problema que lo ocasiona, en este caso intencionalmente removí un punto del código de la API  REST en Node: He copiado/pegado el mensaje de error en el Chat, y me ha respondido con... Esto es correcto (la linea y la fuente del error) e incorrecto (ya que debería ser solo un punto). Luego, me dio un fragmento de código con tres puntos, el cual es también correcto. Como te mencione al principio, siempre debes chequear el trabajo de las herramientas de IA, aun así estoy impresionado con la habilidad de Copilot de tomar un error, describir lo que "piensa" que está mal y, luego sugerir la corrección. Otro gran caso de uso es la refactorización, consideremos el siguiente código: Esto es correcto (la linea y la fuente del error) e incorrecto (ya que debería ser solo un punto). Luego, me dio un fragmento de código con tres puntos, el cual es también correcto. Como te mencione al principio, siempre debes chequear el trabajo de las herramientas de IA, aun así estoy impresionado con la habilidad de Copilot de tomar un error, describir lo que "piensa" que está mal y, luego sugerir la corrección. Otro gran caso de uso es la refactorización, consideremos el siguiente código: Este codigo para calcular descuentos no realiza verificaciones para validar que no le demos valores nulos, cadenas de texto que deberían ser números o valores razonables para  "precio" o "tasa_de_descuento", necesitamos que el código haga lo siguiente:   Copilot Chat puede manejar esto fácilmente... Estrictamente hablando, la generación de pruebas es una subsección de la "Generación de código", pero es tan útil, que sentí que merecía su propia sección. Generar pruebas unitarias para el código puede ser tedioso si estás tratando de cubrir caminos felices y tristes, casos principales de uso y casos extremos. Nuestra función de "precio_con_descuento" necesita casos de prueba para asegurarnos que se genere un aviso de error si "precio" o "tasa_de_descuento" no cumplen con los requisitos. Además, queremos probar lo siguiente: Con estos y nuestros casos de error anteriores, esto es lo que Copilot Chat genero, despues de alguno pequeños ajustes (re-prompting) y cambiando de Minitest a Rspec:  Una prueba para entradas válidas, cinco para entradas incorrectas, los seis funcionan, ¡y yo no tuve que escribirlos! Una de las características destacables de Github Copilot es la elaboración de los resúmenes de solicitudes de incorporación de cambios de Copilot. cabe destacar que esta función está solo disponible para quienes posean una suscripción de Github Copilot Enterprise, aquí te presento algunos puntos clave: ¡Antes conocida como "Hey, Github!", Copilot Voice te permite utilizar la voz para generar los prompts para interactuar con el código, Voice cuenta con estas impresionantes capacidades: GitHub rápidamente está generando una explosión de productividad con toda la familia de addons Copilot. Está incrementando el tiempo que disfruto programando y reduciendo el que antes gastaba en tareas triviales. Lo animo, querido lector, a seguir de cerca los avances de Copilot, porque se producen rápidamente. Ignora los artículos sensacionalistas que prometen "un aumento de productividad de 10 veces la que tiene ahora", pero no ignores esta investigación acerca del impacto que Copilot tiene en la productividad y felicidad de los programadores. Dedique un poco de su tiempo a utilizar las herramientas que Copilot le brinda, póngalo a prueba en su día a día, y, le garantizo que quedará encantado por el efecto que genera en su productividad y felicidad. 
                        Leer más publicaciones.
                     
                        Leer más publicaciones.
                     
    If you read this far, thank the author to show them you care. Say Thanks
 
        Aprende a codificar de forma gratuita. El plan de estudios de código abierto de freeCodeCamp ha ayudado a más de 40,000 personas a obtener trabajos como desarrolladores. Empezar
 freeCodeCamp is a donor-supported tax-exempt 501(c)(3) charity organization (United States Federal Tax Identification Number: 82-0779546) Our mission: to help people learn to code for free. We accomplish this by creating thousands of videos, articles, and interactive coding lessons - all freely available to the public. Las donaciones a freeCodeCamp van dirigidas a nuestras iniciativas educativas y ayudan a pagar servidores, servicios y personal. 
                Puedes hacer una donación deducible de impuestos aquí.
            